FILE: while.kt
    public? final? fun foo(limit: Int): R|kotlin/Unit| {
        lvar k: <implicit> = IntegerLiteral(0)
        some@while(<(k#, limit#)) {
            lval <unary>: <implicit> = k#
            k# = R|<local>/<unary>|.inc#()
            R|<local>/<unary>|
            println#(k#)
            while(==(k#, IntegerLiteral(13))) {
                lval <unary>: <implicit> = k#
                k# = R|<local>/<unary>|.inc#()
                R|<local>/<unary>|
                when () {
                    <(k#, limit#) ->  {
                        break@@@[<(k#, limit#)]
                    }
                }

                when () {
                    >(k#, limit#) ->  {
                        continue@@@[==(k#, IntegerLiteral(13))]
                    }
                }

            }

        }

    }
    public? final? fun bar(limit: Int): R|kotlin/Unit| {
        lvar k: <implicit> = limit#
        do {
            lval <unary>: <implicit> = k#
            k# = R|<local>/<unary>|.dec#()
            R|<local>/<unary>|
            println#(k#)
        }
        while(>=(k#, IntegerLiteral(0)))
    }
