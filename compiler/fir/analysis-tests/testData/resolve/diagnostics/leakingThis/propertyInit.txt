FILE: propertyInit.kt
    public final class D : R|kotlin/Any| {
        public constructor(): R|D| {
            super<R|kotlin/Any|>()
        }

        public final val p1: R|kotlin/String| = this@R|/D|.R|/D.memberCall1|()
            public get(): R|kotlin/String|

        public final val p2: R|kotlin/String|
            public get(): R|kotlin/String|

        public final lateinit var p3: R|kotlin/String|
            public get(): R|kotlin/String|
            public set(value: R|kotlin/String|): R|kotlin/Unit|

        public final val p3: R|kotlin/String|
            public get(): R|kotlin/String|

        init {
            this@R|/D|.R|/D.p2| = String(dsadsa)
        }

        private final fun memberCall1(): R|kotlin/String| {
            ^memberCall1 this@R|/D|.R|/D.memberCall2|()
        }

        private final fun memberCall2(): R|kotlin/String| {
            when () {
                !=(this@R|/D|.R|/D.p2|.R|kotlin/String.length|, Int(0)) ->  {
                    ^memberCall2 this@R|/D|.R|/D.p2|.R|kotlin/String.plus|(String(sadsa))
                }
                else ->  {
                    ^memberCall2 String(empty)
                }
            }

        }

    }
    public final class Resource : R|kotlin/Any| {
        public constructor(): R|Resource| {
            super<R|kotlin/Any|>()
        }

        public final val r1: R|kotlin/String| = String(dsas)
            public get(): R|kotlin/String|

    }
    public final class Owner : R|kotlin/Any| {
        public constructor(): R|Owner| {
            super<R|kotlin/Any|>()
        }

        public final val valResource: R|Resource|by R|/ResourceDelegate.ResourceDelegate|()
            public get(): R|Resource| {
                ^ this@R|/Owner|.D|/Owner.valResource|.R|/ResourceDelegate.getValue|(this@R|/Owner|, ::R|/Owner.valResource|)
            }

        public final val p1: R|kotlin/String| = this@R|/Owner|.R|/Owner.valResource|.R|/Resource.r1|
            public get(): R|kotlin/String|

    }
    public final class ResourceDelegate : R|kotlin/Any| {
        public constructor(): R|ResourceDelegate| {
            super<R|kotlin/Any|>()
        }

        public final operator fun getValue(thisRef: R|Owner|, property: R|ERROR CLASS: Symbol not found, for `KProperty<*>`|): R|Resource| {
            ^getValue R|/Resource.Resource|()
        }

    }
