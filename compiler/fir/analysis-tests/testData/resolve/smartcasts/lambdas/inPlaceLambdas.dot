digraph inPlaceLambdas_kt {
    graph [nodesep=3]
    node [shape=box penwidth=2]
    edge [penwidth=2]

    subgraph cluster_0 {
        color=red
        0 [label="Enter function foo" style="filled" fillcolor=red];
        1 [label="Exit function foo" style="filled" fillcolor=red];
    }

    0 -> {1};

    subgraph cluster_1 {
        color=red
        2 [label="Enter class A" style="filled" fillcolor=red];
        3 [label="Exit class A" style="filled" fillcolor=red];
    }

    2 -> {3} [color=green];

    subgraph cluster_2 {
        color=red
        4 [label="Enter function bar" style="filled" fillcolor=red];
        5 [label="Exit function bar" style="filled" fillcolor=red];
    }

    4 -> {5};

    subgraph cluster_3 {
        color=red
        6 [label="Enter class B" style="filled" fillcolor=red];
        7 [label="Exit class B" style="filled" fillcolor=red];
    }

    6 -> {7} [color=green];

    subgraph cluster_4 {
        color=red
        8 [label="Enter function test_1" style="filled" fillcolor=red];
        subgraph cluster_5 {
            color=blue
            9 [label="Enter when"];
            subgraph cluster_6 {
                color=blue
                10 [label="Enter when branch condition "];
                11 [label="Access variable R|<local>/x|"];
                12 [label="Type operator: (R|<local>/x| is R|A|)"];
                13 [label="Exit when branch condition"];
            }
            14 [label="Synthetic else branch"];
            15 [label="Enter when branch result"];
            subgraph cluster_7 {
                color=blue
                16 [label="Enter block"];
                17 [label="Postponed enter to lambda"];
                subgraph cluster_8 {
                    color=blue
                    18 [label="Enter function anonymousFunction"];
                    19 [label="Access variable R|<local>/x|"];
                    20 [label="Function call: R|<local>/x|.R|/A.foo|()"];
                    21 [label="Exit function anonymousFunction"];
                }
                22 [label="Call arguments union" style="filled" fillcolor=yellow];
                23 [label="Postponed exit from lambda"];
                24 [label="Function call: R|kotlin/run|<R|kotlin/Unit|>(...)"];
                25 [label="Exit block"];
            }
            26 [label="Exit when branch result"];
            27 [label="Exit when"];
        }
        28 [label="Exit function test_1" style="filled" fillcolor=red];
    }

    8 -> {9};
    9 -> {10};
    10 -> {11};
    11 -> {12};
    12 -> {13};
    13 -> {15 14};
    14 -> {27};
    15 -> {16};
    16 -> {17};
    17 -> {18};
    17 -> {23} [color=red];
    18 -> {19};
    19 -> {20};
    20 -> {21};
    21 -> {23} [color=green];
    21 -> {22} [color=red];
    22 -> {24} [color=red];
    23 -> {24} [color=green];
    24 -> {25};
    25 -> {26};
    26 -> {27};
    27 -> {28};

    subgraph cluster_9 {
        color=red
        29 [label="Enter function test_2" style="filled" fillcolor=red];
        30 [label="Postponed enter to lambda"];
        subgraph cluster_10 {
            color=blue
            31 [label="Enter function anonymousFunction"];
            32 [label="Access variable R|<local>/x|"];
            33 [label="Type operator: (R|<local>/x| as R|B|)"];
            34 [label="Exit function anonymousFunction"];
        }
        35 [label="Call arguments union" style="filled" fillcolor=yellow];
        36 [label="Postponed exit from lambda"];
        37 [label="Function call: R|kotlin/run|<R|B|>(...)"];
        38 [label="Access variable R|<local>/x|"];
        39 [label="Function call: R|<local>/x|.R|/B.bar|()"];
        40 [label="Exit function test_2" style="filled" fillcolor=red];
    }

    29 -> {30};
    30 -> {31};
    30 -> {36} [color=red];
    31 -> {32};
    32 -> {33};
    33 -> {34};
    34 -> {36} [color=green];
    34 -> {35} [color=red];
    35 -> {37} [color=red];
    36 -> {37} [color=green];
    37 -> {38};
    38 -> {39};
    39 -> {40};

    subgraph cluster_11 {
        color=red
        41 [label="Enter function test_3" style="filled" fillcolor=red];
        subgraph cluster_12 {
            color=blue
            42 [label="Enter when"];
            subgraph cluster_13 {
                color=blue
                43 [label="Enter when branch condition "];
                44 [label="Access variable R|<local>/x|"];
                45 [label="Type operator: (R|<local>/x| is R|A|)"];
                46 [label="Exit when branch condition"];
            }
            47 [label="Synthetic else branch"];
            48 [label="Enter when branch result"];
            subgraph cluster_14 {
                color=blue
                49 [label="Enter block"];
                50 [label="Postponed enter to lambda"];
                subgraph cluster_15 {
                    color=blue
                    51 [label="Enter function anonymousFunction"];
                    52 [label="Access variable R|<local>/x|"];
                    53 [label="Function call: R|<local>/x|.R|/A.foo|()"];
                    54 [label="Access variable R|<local>/x|"];
                    55 [label="Type operator: (R|<local>/x| as R|B|)"];
                    56 [label="Exit function anonymousFunction"];
                }
                57 [label="Call arguments union" style="filled" fillcolor=yellow];
                58 [label="Postponed exit from lambda"];
                59 [label="Function call: R|kotlin/run|<R|B|>(...)"];
                60 [label="Access variable R|<local>/x|"];
                61 [label="Function call: R|<local>/x|.R|/B.bar|()"];
                62 [label="Exit block"];
            }
            63 [label="Exit when branch result"];
            64 [label="Exit when"];
        }
        65 [label="Exit function test_3" style="filled" fillcolor=red];
    }

    41 -> {42};
    42 -> {43};
    43 -> {44};
    44 -> {45};
    45 -> {46};
    46 -> {48 47};
    47 -> {64};
    48 -> {49};
    49 -> {50};
    50 -> {51};
    50 -> {58} [color=red];
    51 -> {52};
    52 -> {53};
    53 -> {54};
    54 -> {55};
    55 -> {56};
    56 -> {58} [color=green];
    56 -> {57} [color=red];
    57 -> {59} [color=red];
    58 -> {59} [color=green];
    59 -> {60};
    60 -> {61};
    61 -> {62};
    62 -> {63};
    63 -> {64};
    64 -> {65};

}
