digraph smartcastFromArgument_kt {
    graph [nodesep=3]
    node [shape=box penwidth=2]
    edge [penwidth=2]

    subgraph cluster_0 {
        color=red
        0 [label="Enter function foo" style="filled" fillcolor=red];
        1 [label="Exit function foo" style="filled" fillcolor=red];
    }

    0 -> {1};

    subgraph cluster_1 {
        color=red
        2 [label="Enter class A" style="filled" fillcolor=red];
        3 [label="Exit class A" style="filled" fillcolor=red];
    }

    2 -> {3} [color=green];

    subgraph cluster_2 {
        color=red
        4 [label="Enter function takeA" style="filled" fillcolor=red];
        5 [label="Const: Boolean(true)"];
        6 [label="Jump: ^takeA Boolean(true)"];
        7 [label="Stub" style="filled" fillcolor=gray];
        8 [label="Exit function takeA" style="filled" fillcolor=red];
    }

    4 -> {5};
    5 -> {6};
    6 -> {8};
    6 -> {7} [style=dotted];
    7 -> {8} [style=dotted];

    subgraph cluster_3 {
        color=red
        9 [label="Enter function test" style="filled" fillcolor=red];
        subgraph cluster_4 {
            color=blue
            10 [label="Enter when"];
            subgraph cluster_5 {
                color=blue
                11 [label="Enter when branch condition "];
                subgraph cluster_6 {
                    color=blue
                    12 [label="Enter when"];
                    13 [label="Access variable R|<local>/a|"];
                    14 [label="Type operator: (R|<local>/a| as? R|A|)"];
                    15 [label="Variable declaration: lval <elvis>: R|A?|"];
                    subgraph cluster_7 {
                        color=blue
                        16 [label="Enter when branch condition "];
                        17 [label="Const: Null(null)"];
                        18 [label="Operator =="];
                        19 [label="Exit when branch condition"];
                    }
                    subgraph cluster_8 {
                        color=blue
                        20 [label="Enter when branch condition else"];
                        21 [label="Exit when branch condition"];
                    }
                    22 [label="Enter when branch result"];
                    subgraph cluster_9 {
                        color=blue
                        23 [label="Enter block"];
                        24 [label="Access variable R|<local>/<elvis>|"];
                        25 [label="Exit block"];
                    }
                    26 [label="Exit when branch result"];
                    27 [label="Enter when branch result"];
                    subgraph cluster_10 {
                        color=blue
                        28 [label="Enter block"];
                        29 [label="Jump: ^test Unit"];
                        30 [label="Stub" style="filled" fillcolor=gray];
                        31 [label="Exit block" style="filled" fillcolor=gray];
                    }
                    32 [label="Exit when branch result" style="filled" fillcolor=gray];
                    33 [label="Exit when"];
                }
                34 [label="Function call: R|/takeA|(...)"];
                35 [label="Exit when branch condition"];
            }
            36 [label="Synthetic else branch"];
            37 [label="Enter when branch result"];
            subgraph cluster_11 {
                color=blue
                38 [label="Enter block"];
                39 [label="Access variable R|<local>/a|"];
                40 [label="Function call: R|<local>/a|.R|/A.foo|()"];
                41 [label="Exit block"];
            }
            42 [label="Exit when branch result"];
            43 [label="Exit when"];
        }
        44 [label="Exit function test" style="filled" fillcolor=red];
    }

    9 -> {10};
    10 -> {11};
    11 -> {12};
    12 -> {13};
    13 -> {14};
    14 -> {15};
    15 -> {16};
    16 -> {17};
    17 -> {18};
    18 -> {19};
    19 -> {27 20};
    20 -> {21};
    21 -> {22};
    22 -> {23};
    23 -> {24};
    24 -> {25};
    25 -> {26};
    26 -> {33};
    27 -> {28};
    28 -> {29};
    29 -> {44};
    29 -> {30} [style=dotted];
    30 -> {31} [style=dotted];
    31 -> {32} [style=dotted];
    32 -> {33} [style=dotted];
    33 -> {34};
    34 -> {35};
    35 -> {37 36};
    36 -> {43};
    37 -> {38};
    38 -> {39};
    39 -> {40};
    40 -> {41};
    41 -> {42};
    42 -> {43};
    43 -> {44};

}
