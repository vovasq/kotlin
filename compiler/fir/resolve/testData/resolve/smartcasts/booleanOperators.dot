digraph booleanOperators_kt {
  graph [splines=ortho nodesep=3]
  node [shape=box penwidth=2]
  edge [penwidth=2]

  subgraph cluster_0 {
    color=red
    0 [label="Enter function foo" style="filled" fillcolor=red];
    1 [label="Exit function foo" style="filled" fillcolor=red];
  }

  0 -> {1};

  subgraph cluster_1 {
    color=red
    2 [label="Enter function bool" style="filled" fillcolor=red];
    3 [label="Exit function bool" style="filled" fillcolor=red];
  }

  2 -> {3};

  subgraph cluster_2 {
    color=red
    4 [label="Enter function bar" style="filled" fillcolor=red];
    5 [label="Exit function bar" style="filled" fillcolor=red];
  }

  4 -> {5};

  subgraph cluster_3 {
    color=red
    6 [label="Enter function baz" style="filled" fillcolor=red];
    7 [label="Exit function baz" style="filled" fillcolor=red];
  }

  6 -> {7};

  subgraph cluster_4 {
    color=red
    8 [label="Enter function test_1" style="filled" fillcolor=red];
    subgraph cluster_5 {
      color=blue
      9 [label="Enter when"];
      subgraph cluster_6 {
        color=blue
        10 [label="Enter when branch condition "];
        subgraph cluster_7 {
          color=blue
          11 [label="Enter &&"];
          12 [label="Access variable R|<local>/x|"];
          13 [label="Type operator: x is B"];
          14 [label="Exit left part of &&"];
          15 [label="Enter right part of &&"];
          16 [label="Access variable R|<local>/x|"];
          17 [label="Type operator: x is C"];
          18 [label="Exit &&"];
        }
        19 [label="Exit when branch condition"];
      }
      20 [label="Synthetic else branch"];
      21 [label="Enter when branch result"];
      subgraph cluster_8 {
        color=blue
        22 [label="Enter block"];
        23 [label="Access variable R|<local>/x|"];
        24 [label="Function call: R|<local>/x|.R|/A.foo|()"];
        25 [label="Access variable R|<local>/x|"];
        26 [label="Function call: R|<local>/x|.R|/B.bar|()"];
        27 [label="Access variable R|<local>/x|"];
        28 [label="Function call: R|<local>/x|.R|/C.baz|()"];
        29 [label="Exit block"];
      }
      30 [label="Exit when branch result"];
      31 [label="Exit when"];
    }
    32 [label="Exit function test_1" style="filled" fillcolor=red];
  }

  8 -> {9};
  9 -> {10};
  10 -> {11};
  11 -> {12};
  12 -> {13};
  13 -> {14};
  14 -> {18 15};
  15 -> {16};
  16 -> {17};
  17 -> {18};
  18 -> {19};
  19 -> {21 20};
  20 -> {31};
  21 -> {22};
  22 -> {23};
  23 -> {24};
  24 -> {25};
  25 -> {26};
  26 -> {27};
  27 -> {28};
  28 -> {29};
  29 -> {30};
  30 -> {31};
  31 -> {32};

  subgraph cluster_9 {
    color=red
    33 [label="Enter function test_2" style="filled" fillcolor=red];
    subgraph cluster_10 {
      color=blue
      34 [label="Enter when"];
      subgraph cluster_11 {
        color=blue
        35 [label="Enter when branch condition "];
        subgraph cluster_12 {
          color=blue
          36 [label="Enter ||"];
          37 [label="Access variable R|<local>/x|"];
          38 [label="Type operator: x is B"];
          39 [label="Exit left part of ||"];
          40 [label="Enter right part of ||"];
          41 [label="Access variable R|<local>/x|"];
          42 [label="Type operator: x is C"];
          43 [label="Exit ||"];
        }
        44 [label="Exit when branch condition"];
      }
      45 [label="Synthetic else branch"];
      46 [label="Enter when branch result"];
      subgraph cluster_13 {
        color=blue
        47 [label="Enter block"];
        48 [label="Access variable R|<local>/x|"];
        49 [label="Function call: R|<local>/x|.R|/A.foo|()"];
        50 [label="Access variable R|<local>/x|"];
        51 [label="Function call: R|<local>/x|.<Unresolved name: bar>#()"];
        52 [label="Access variable R|<local>/x|"];
        53 [label="Function call: R|<local>/x|.<Unresolved name: baz>#()"];
        54 [label="Exit block"];
      }
      55 [label="Exit when branch result"];
      56 [label="Exit when"];
    }
    57 [label="Exit function test_2" style="filled" fillcolor=red];
  }

  33 -> {34};
  34 -> {35};
  35 -> {36};
  36 -> {37};
  37 -> {38};
  38 -> {39};
  39 -> {43 40};
  40 -> {41};
  41 -> {42};
  42 -> {43};
  43 -> {44};
  44 -> {46 45};
  45 -> {56};
  46 -> {47};
  47 -> {48};
  48 -> {49};
  49 -> {50};
  50 -> {51};
  51 -> {52};
  52 -> {53};
  53 -> {54};
  54 -> {55};
  55 -> {56};
  56 -> {57};

  subgraph cluster_14 {
    color=red
    58 [label="Enter function test_3" style="filled" fillcolor=red];
    subgraph cluster_15 {
      color=blue
      59 [label="Enter when"];
      subgraph cluster_16 {
        color=blue
        60 [label="Enter when branch condition "];
        61 [label="Access variable R|<local>/x|"];
        62 [label="Type operator: x !is A"];
        63 [label="Function call: (R|<local>/x| !is R|A|).R|kotlin/Boolean.not|()"];
        64 [label="Exit when branch condition"];
      }
      65 [label="Synthetic else branch"];
      66 [label="Enter when branch result"];
      subgraph cluster_17 {
        color=blue
        67 [label="Enter block"];
        68 [label="Access variable R|<local>/x|"];
        69 [label="Function call: R|<local>/x|.R|/A.foo|()"];
        70 [label="Exit block"];
      }
      71 [label="Exit when branch result"];
      72 [label="Exit when"];
    }
    73 [label="Exit function test_3" style="filled" fillcolor=red];
  }

  58 -> {59};
  59 -> {60};
  60 -> {61};
  61 -> {62};
  62 -> {63};
  63 -> {64};
  64 -> {66 65};
  65 -> {72};
  66 -> {67};
  67 -> {68};
  68 -> {69};
  69 -> {70};
  70 -> {71};
  71 -> {72};
  72 -> {73};

  subgraph cluster_18 {
    color=red
    74 [label="Enter function test_4" style="filled" fillcolor=red];
    subgraph cluster_19 {
      color=blue
      75 [label="Enter when"];
      subgraph cluster_20 {
        color=blue
        76 [label="Enter when branch condition "];
        subgraph cluster_21 {
          color=blue
          77 [label="Enter ||"];
          78 [label="Access variable R|<local>/x|"];
          79 [label="Type operator: x !is String"];
          80 [label="Exit left part of ||"];
          81 [label="Enter right part of ||"];
          82 [label="Access variable R|<local>/x|"];
          83 [label="Access variable R|kotlin/String.length|"];
          84 [label="Const: Int(0)"];
          85 [label="Operator =="];
          86 [label="Exit ||"];
        }
        87 [label="Exit when branch condition"];
      }
      88 [label="Synthetic else branch"];
      89 [label="Enter when branch result"];
      subgraph cluster_22 {
        color=blue
        90 [label="Enter block"];
        91 [label="Access variable R|<local>/x|"];
        92 [label="Access variable <Unresolved name: length>#"];
        93 [label="Exit block"];
      }
      94 [label="Exit when branch result"];
      95 [label="Exit when"];
    }
    96 [label="Access variable R|<local>/x|"];
    97 [label="Access variable <Unresolved name: length>#"];
    98 [label="Exit function test_4" style="filled" fillcolor=red];
  }

  74 -> {75};
  75 -> {76};
  76 -> {77};
  77 -> {78};
  78 -> {79};
  79 -> {80};
  80 -> {86 81};
  81 -> {82};
  82 -> {83};
  83 -> {84};
  84 -> {85};
  85 -> {86};
  86 -> {87};
  87 -> {89 88};
  88 -> {95};
  89 -> {90};
  90 -> {91};
  91 -> {92};
  92 -> {93};
  93 -> {94};
  94 -> {95};
  95 -> {96};
  96 -> {97};
  97 -> {98};

  subgraph cluster_23 {
    color=red
    99 [label="Enter function test_5" style="filled" fillcolor=red];
    subgraph cluster_24 {
      color=blue
      100 [label="Enter when"];
      subgraph cluster_25 {
        color=blue
        101 [label="Enter when branch condition "];
        subgraph cluster_26 {
          color=blue
          102 [label="Enter ||"];
          103 [label="Access variable R|<local>/x|"];
          104 [label="Const: Null(null)"];
          105 [label="Operator !="];
          106 [label="Exit left part of ||"];
          107 [label="Enter right part of ||"];
          108 [label="Const: Boolean(false)"];
          109 [label="Exit ||"];
        }
        110 [label="Exit when branch condition"];
      }
      111 [label="Synthetic else branch"];
      112 [label="Enter when branch result"];
      subgraph cluster_27 {
        color=blue
        113 [label="Enter block"];
        114 [label="Access variable R|<local>/x|"];
        115 [label="Function call: R|<local>/x|.<Inapplicable(WRONG_RECEIVER): [/A.foo]>#()"];
        116 [label="Exit block"];
      }
      117 [label="Exit when branch result"];
      118 [label="Exit when"];
    }
    119 [label="Exit function test_5" style="filled" fillcolor=red];
  }

  99 -> {100};
  100 -> {101};
  101 -> {102};
  102 -> {103};
  103 -> {104};
  104 -> {105};
  105 -> {106};
  106 -> {109 107};
  107 -> {108};
  108 -> {109};
  109 -> {110};
  110 -> {112 111};
  111 -> {118};
  112 -> {113};
  113 -> {114};
  114 -> {115};
  115 -> {116};
  116 -> {117};
  117 -> {118};
  118 -> {119};

  subgraph cluster_28 {
    color=red
    120 [label="Enter function test_6" style="filled" fillcolor=red];
    subgraph cluster_29 {
      color=blue
      121 [label="Enter when"];
      subgraph cluster_30 {
        color=blue
        122 [label="Enter when branch condition "];
        subgraph cluster_31 {
          color=blue
          123 [label="Enter ||"];
          124 [label="Const: Boolean(false)"];
          125 [label="Exit left part of ||"];
          126 [label="Enter right part of ||"];
          127 [label="Access variable R|<local>/x|"];
          128 [label="Const: Null(null)"];
          129 [label="Operator !="];
          130 [label="Stub" style="filled" fillcolor=gray];
          131 [label="Exit ||"];
        }
        132 [label="Exit when branch condition"];
      }
      133 [label="Synthetic else branch"];
      134 [label="Enter when branch result"];
      subgraph cluster_32 {
        color=blue
        135 [label="Enter block"];
        136 [label="Access variable R|<local>/x|"];
        137 [label="Function call: R|<local>/x|.<Inapplicable(WRONG_RECEIVER): [/A.foo]>#()"];
        138 [label="Exit block"];
      }
      139 [label="Exit when branch result"];
      140 [label="Exit when"];
    }
    141 [label="Exit function test_6" style="filled" fillcolor=red];
  }

  120 -> {121};
  121 -> {122};
  122 -> {123};
  123 -> {124};
  124 -> {125};
  125 -> {126};
  125 -> {130} [style=dotted];
  126 -> {127};
  127 -> {128};
  128 -> {129};
  129 -> {131};
  130 -> {131} [style=dotted];
  131 -> {132};
  132 -> {134 133};
  133 -> {140};
  134 -> {135};
  135 -> {136};
  136 -> {137};
  137 -> {138};
  138 -> {139};
  139 -> {140};
  140 -> {141};

  subgraph cluster_33 {
    color=red
    142 [label="Enter function test_7" style="filled" fillcolor=red];
    subgraph cluster_34 {
      color=blue
      143 [label="Enter when"];
      subgraph cluster_35 {
        color=blue
        144 [label="Enter when branch condition "];
        subgraph cluster_36 {
          color=blue
          145 [label="Enter &&"];
          146 [label="Access variable R|<local>/x|"];
          147 [label="Type operator: x is A"];
          148 [label="Exit left part of &&"];
          149 [label="Enter right part of &&"];
          150 [label="Access variable R|<local>/x|"];
          151 [label="Function call: R|<local>/x|.R|/A.bool|()"];
          152 [label="Exit &&"];
        }
        153 [label="Exit when branch condition"];
      }
      154 [label="Synthetic else branch"];
      155 [label="Enter when branch result"];
      subgraph cluster_37 {
        color=blue
        156 [label="Enter block"];
        157 [label="Access variable R|<local>/x|"];
        158 [label="Function call: R|<local>/x|.R|/A.foo|()"];
        159 [label="Exit block"];
      }
      160 [label="Exit when branch result"];
      161 [label="Exit when"];
    }
    162 [label="Exit function test_7" style="filled" fillcolor=red];
  }

  142 -> {143};
  143 -> {144};
  144 -> {145};
  145 -> {146};
  146 -> {147};
  147 -> {148};
  148 -> {152 149};
  149 -> {150};
  150 -> {151};
  151 -> {152};
  152 -> {153};
  153 -> {155 154};
  154 -> {161};
  155 -> {156};
  156 -> {157};
  157 -> {158};
  158 -> {159};
  159 -> {160};
  160 -> {161};
  161 -> {162};

}
